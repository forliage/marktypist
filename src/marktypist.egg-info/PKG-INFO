Metadata-Version: 2.4
Name: marktypist
Version: 0.1.0
Summary: 一个功能强大的 Markdown 和 Typst 双向转换器，致力于实现逻辑感知的高保真转换。
Author-email: Your Name <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/your-username/marktypist
Project-URL: Repository, https://github.com/your-username/marktypist
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Text Processing :: Markup
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: markdown-it-py>=3.0.0
Requires-Dist: mdit-py-plugins>=0.4.0
Requires-Dist: typer[all]>=0.9.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Dynamic: license-file

# Marktypist: 下一代 Markdown 与 Typst 双向转换器

![Python Version](https://img.shields.io/badge/python-3.8+-blue.svg)
![License](https://img.shields.io/badge/license-MIT-green.svg)
[![PyPI version](https://img.shields.io/pypi/v/marktypist.svg)](https://pypi.org/project/marktypist/)
[![Build Status](https://img.shields.io/travis/com/your-username/marktypist.svg)](https://travis-ci.com/your-username/marktypist)

**Marktypist** 是一个功能强大、旨在实现高保真双向转换的 Python 工具，无缝连接 Markdown 的简洁与 Typst 的专业排版能力。

我们的目标不止于基础的语法转换。**Marktypist 致力于成为一个逻辑感知的转换引擎**，能够理解并转换 Typst 中的编程结构（如变量、条件、循环），将其尽可能地、有意义地映射回 Markdown，这是我们与其他转换器的核心区别。

---

### ✨ 核心愿景

*   **高保真转换**: 最大程度保留文档的结构、语义和意图，无论是 `md -> typ` 还是 `typ -> md`。
*   **逻辑感知 (远期目标)**: 独创性地尝试解析 Typst 的脚本逻辑 (`#let`, `#if`, `#for`)，并将其转换为可读的 Markdown 格式，而非仅仅转换渲染后的结果。
*   **极致易用**: 提供简洁直观的命令行工具，一行命令即可完成复杂的转换任务。
*   **高度可扩展**: 基于模块化和中间表示（IR）的设计，方便添加新的转换规则或集成到其他工具流中。

### 🚀 功能支持状态

| 功能特性 | Markdown -> Typst | Typst -> Markdown | 备注 |
| :--- | :---: | :---: | :--- |
| 标题、段落 | ✅ | ✅ | |
| 粗体、斜体、删除线 | ✅ | ✅ | |
| 列表（有序/无序/任务） | ✅ | ✅ | |
| 代码块（带语法高亮） | ✅ | ✅ | |
| 引用块 | ✅ | ✅ | |
| 链接与图片 | ✅ | ✅ | |
| 表格 | ✅ | 🟡 | Typst 表格结构复杂，初期保真度有限 |
| 数学公式 (LaTeX) | ✅ | ✅ | |
| 水平分割线 | ✅ | ✅ | |
| **Typst 脚本逻辑** | N/A | ⚫ | **核心挑战功能，正在规划中** |

**图例:** ✅ 已支持 | 🟡 进行中/部分支持 | ⚫ 计划中

### 🔧 安装与设置

**1. 系统依赖**

在安装 `marktypist` 之前，请确保你的系统已安装以下软件：

*   **Python 3.8+**
*   **Typst**: 请参考 [官方 Typst 安装指南](https://github.com/typst/typst#installation) 进行安装。`marktypist` 需要调用 `typst` 命令行工具来完成 `typ -> md` 的转换。

**2. 从源码安装 (开发)**

我们推荐使用虚拟环境进行开发。

```bash
# 1. 克隆本仓库
git clone https://github.com/your-username/marktypist.git
cd marktypist

# 2. (Windows) 创建并激活虚拟环境
python -m venv venv
.\venv\Scripts\activate

# 3. 安装依赖（-e 表示可编辑模式，代码更改会立即生效）
pip install -e .[dev]  # 假设你在 pyproject.toml 中定义了 [project.optional-dependencies]
```

**(未来) 从 PyPI 安装 (用户)**
```bash
pip install marktypist
```

### 💡 使用方法

`marktypist` 提供了一个简单的命令行接口。

**基本转换 (自动检测文件类型):**
```bash
# 将 Markdown 转换为 Typst
marktypist convert my_document.md

# 将 Typst 转换为 Markdown
marktypist convert my_report.typ
```

**指定输出文件:**
```bash
marktypist convert my_document.md -o my_document.typ
```

**实时监控文件变化并自动转换:**
```bash
marktypist watch my_document.md
```

### 🗺️ 开发路线图

1.  **阶段一：基础核心 (MVP)**
    *   完成所有基础语法的 `md -> typ` 转换器。
    *   基于 `typst query` 实现 `typ -> md` 的结构化转换。
    *   完善 CLI 功能，包括文件监控。
    *   建立完整的单元测试覆盖。

2.  **阶段二：高级转换与健壮性**
    *   提升 `typ -> md` 的表格、图片等复杂元素的转换保真度。
    *   引入中间表示（IR）层，重构转换逻辑，为逻辑感知做准备。
    *   发布 1.0 版本到 PyPI。

3.  **阶段三：逻辑感知 (S-Tier Goal)**
    *   研究并集成 Typst AST 解析方案。
    *   尝试将简单的 Typst 脚本（如变量赋值、条件渲染）转换为可解释的 Markdown 块。
    *   定义转换规范，处理无法转换的逻辑（例如，通过代码块或注释展示）。

### ❤️ 如何贡献

我们欢迎任何形式的贡献！无论是提交 Issue、修复 Bug、添加新功能还是改进文档。

1.  Fork 本仓库。
2.  创建一个新的功能分支 (`git checkout -b feature/your-feature-name`)。
3.  提交你的更改 (`git commit -m 'Add some feature'`)。
4.  将你的分支推送到你的 Fork (`git push origin feature/your-feature-name`)。
5.  创建一个 Pull Request。

### 📄 许可证

本项目基于 [MIT License](LICENSE) 发布。
